X = np.concatenate([ai_features, human_features])
y = np.concatenate([ai_labels, human_labels])

X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2)

X_train = np.expand_dims(X_train, axis=2)
X_val = np.expand_dims(X_val, axis=2)

model = Sequential()
model.add(Conv1D(64, kernel_size=3, activation='relu', padding='same', input_shape=(X_train.shape[1], 1)))
model.add(MaxPooling1D(pool_size=2))
model.add(Dropout(0.25))
model.add(Flatten())
model.add(Dense(1, activation='sigmoid'))

optimizer = Adam(learning_rate=0.001)

model.compile(loss='binary_crossentropy', optimizer=optimizer ,metrics=['accuracy'])

print(model.summary())

history = model.fit(X_train, y_train, batch_size=64, epochs=100, validation_data=(X_val, y_val))
